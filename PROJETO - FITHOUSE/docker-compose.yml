version: '3.8'

services:
  cassandra:
    image: cassandra:latest
    container_name: cassandra_db
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=MyCassandraCluster
      - CASSANDRA_START_RPC=true
    networks:
      - db_network

  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: testdb
      MYSQL_USER: user
      MYSQL_PASSWORD: userpass
    networks:
      - db_network

  mongodb:
    image: mongo:latest
    container_name: mongodb_db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpass
    networks:
      - db_network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    networks:
      - db_network

  produtor:
    build:
      context: ./S_servicos
      dockerfile: Dockerfile.produtor

  consumidor:
    build:
      context: ./S_servicos
      dockerfile: Dockerfile.consumidor

  consolidador:
    build:
      context: ./S_servicos
      dockerfile: Dockerfile.consolidador

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - db_network

networks:
  db_network:
    driver: bridge
